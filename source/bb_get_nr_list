#!/usr/bin/env bash
# @file bb_nr_list
# @brief Gets a non redundant list of items from a redundant list.
# @description 
#	Given a one column list of redundant items, generates a new non redundant list.
# @example 
#	bb_get_nr_list -i fileWithRedundantItems 
# @arg $1 A one column file.


# Only source libraries needed.
source "$BIOBASH_NATIVE_LIB_PATH/io.sh"; 
source "$BIOBASH_NATIVE_LIB_PATH/file.sh";
source "$BIOBASH_NATIVE_LIB_PATH/feedback.sh";



#Input validation
hasArgs=$(io::script_has_args "$#")
isPipe=$(io::input_is_pipe)

if [[ $hasArgs = 1 && $isPipe = 1 ]]; then

	helpUsage="bb_get_nr_list -i [file]
	Where [file] is a redundant one column (sorted or unsorted) simple text file."

	helpDesc="Retrieves a sorted and non redundant list of items."

	# DO NOT FORGET to quote the variables.
	feedback::help  "$helpDesc" "$helpUsage"
	exit 0
fi

#...then
if [ $hasArgs = 0 ];then
	while getopts i: option; 
	do
		case "${option}" in
			i)
				inputFile="$OPTARG";;	
				
			\?)
				feedback::sayfrom "Unknown parameter option." "error"
				echo "${help}"
				exit;;
		esac
	done
elif [ $hasArgs = 1 ];then

	data=$(cat -- "$@")

	inputFile=$(file::make_temp_file)

	#This is  hack used to clean the environment. The only reason we will erase user data
	# is because we created, as this temporary file.  This flag will let us know that
	# we can safely erase this file.
	eraseFile=0

	# write to file	
	echo "$data" > $inputFile
fi

fileExists=$(file::file_exists $inputFile)
if [[ $fileExists -eq 1 ]];then
	feedback::sayfrom "Unable to find file: ${inputFile}. Maybe missing -i option?" "error"
	echo "$help"
	exit 1
fi

# To this point we have a file to work with. No need to check if it FASTA. 
# Still we do not have a function: "isList" as in "isFASTA" or "isFASTQ".




#-------------------------------- SCRIPT'S CORE ---------------------------

FILEA=$(file::make_temp_file)
FILEB=$(file::make_temp_file)
FILEC=$(file::make_temp_file)
	
cat $inputFile | sort  > $FILEA
uniq -u $FILEA > $FILEB   #Only lines that are not repeated
uniq -d $FILEA > $FILEC   #Only lines that are repeated.
cat $FILEB $FILEC | sort

#-------------------------------------------------------------------------


#Cleaning UP
# ONLY EXECUTED when data comes from a pipe and temp file was created above.
# Note here that $tmpFastaFile is quoted and that we are using "==" instead of"
# "-eq". This is because BB was complaining about a unary operator expected.
# The whole theory here: https://codefather.tech/blog/bash-unary-operator-expected/
if [ "$eraseFile" == 0 ];then
	rm $inputFile
fi

rm $FILEA $FILEB $FILEC

exit