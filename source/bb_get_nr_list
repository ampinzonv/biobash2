#!/usr/bin/env bash
# @file bb_nr_list
# @brief Gets a non redundant list of items from a redundant list.
# @description 
#	Given a one column list of redundant items, generates a new non redundant list.
# @example 
#	bb_get_nr_list -i fileWithRedundantItems 
# @arg $1 A one column file.


# Only source libraries needed.
source "$BIOBASH_NATIVE_LIB_PATH/io.sh"; 
source "$BIOBASH_NATIVE_LIB_PATH/file.sh";
source "$BIOBASH_NATIVE_LIB_PATH/feedback.sh";



#Input validation
hasArgs=$(io::script_has_args "$#")
isPipe=$(io::input_is_pipe)

if [[ $hasArgs = 1 && $isPipe = 1 ]]; then

	helpMsg=$(echo "bb_get_nr_list -i [one column file]")
	feedback::help $helpMsg
	exit 0
fi

#...then
if [ $hasArgs = 0 ];then
	while getopts i: option; 
	do
		case "${option}" in
			i)
				inputFile="$OPTARG";;	
				
			\?)
				feedback::sayfrom "Unknown parameter option." "error"
				echo "${help}"
				exit;;
		esac
	done
elif [ $hasArgs = 1 ];then

	data=$(cat -- "$@")

	listFile=$(file::make_temp_file)
	#This is  hack used to clean the environment. The only reason we will erase user data
	# is because we created, as this temporary file.  This flag will let us know that
	# we can safely erase this file.

	tmpInputFile=0

	# write to file	
	echo "$data" > $inputFile

fi
fileExists=$(file::file_exists $inputFile)
if [[ $fileExists -eq 1 ]];then
	feedback::sayfrom "Unable to find file: ${inputFile}. Maybe missing -i option?" "error"
	echo "$help"
	exit 1
fi



exit