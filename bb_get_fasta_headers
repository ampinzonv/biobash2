#!/bin/bash
# @file bb_get_fasta_headers 
# @brief Extracts headers from a single/multiple fasta file.
# @description 
#	Outputs a list of all fasta headers without the ">"in a fasta file.
#	It can be a single or multiple fasta file.
# @example 
#	bb_get_fasta_headers -i sequence.fasta 
# @arg $1 A valid fasta file.
# @exitcode 0 if succesful
# @exitcode 1 if unsuccesful
#
# Since sometimes remembering how exactly getopts work, this can be handy:
# https://www.tutorialspoint.com/unix_commands/getopt.htm
# getopt returns error code 0 for succesful parsing, 1 if getopt(3) returns errors, 
# 2 if it does not understand its own parameters, 3 if an internal error occurs like out-of-memory, 
# and 4 if it is called with -T.



source $BIOBASH_NATIVE_LIB

#ALL BB scripts that receive input REQUIRE THE FLAG:"-i"
while getopts i:o:: option; do
	case "${option}" in
		i)
			fastaFile="$OPTARG";;
		o)
			output="$OPTARG";;
		\?)
			feedback::sayfrom "Unknown option." "error"
			exit;;
	esac
done	

#--------------------------------------------------------------------------
#						Validate Input
# It is necessary to evaluate several input cases.
# Case 1: -i  is not provided
# Case 2: $1  AND -i are provided (i.e. bb_script file.fasta -i whatever)
# 	When $1 is provided before -i. System outputs missing file.
#	This can be considered a feature. ALL BB scripts REQUIRE "-i"
# Case 3: -i is provided but it is empty (3.1).
#	3.1 bb_script -i  (Handled by getopts)
#--------------------------------------------------------------------------
if  [[ -z "$fastaFile" ]]; then
	feedback::sayfrom "No fasta file provided" "error"
	echo "
	Usage:
	bb_get_fasta_headers -i [fasta file]
	"
	exit 1
fi

isFasta=$(validate::isFasta $fastaFile) 

if [[ $isFasta == "true" ]];then

	grep "^>" "$fastaFile"  | sed -e "s/>//"
	
else
	feedback::sayfrom "Provided $fastaFile file, is not a valid Fasta file." "error"
	exit 
fi

exit 0	