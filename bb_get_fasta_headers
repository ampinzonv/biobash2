#!/bin/bash
# @file bb_get_fasta_headers 
# @brief Extracts headers from a single/multiple fasta file.
# @description 
#	Outputs a list of all fasta headers without the ">"in a fasta file.
#	It can be a single or multiple fasta file.
# @example 
#	bb_get_fasta_headers -i sequence.fasta 
# @arg $1 A valid fasta file.
# @exitcode 0 if succesful
# @exitcode 1 if unsuccesful
#
# Since sometimes remembering how exactly getopts work, this can be handy:
# https://www.tutorialspoint.com/unix_commands/getopt.htm
# getopt returns error code 0 for succesful parsing, 1 if getopt(3) returns errors, 
# 2 if it does not understand its own parameters, 3 if an internal error occurs like out-of-memory, 
# and 4 if it is called with -T.



source $BIOBASH_NATIVE_LIB_PATH/file.sh

#If there are no arguments
if [[ $# -eq 0 ]]; then
	stream=$(cat <&0)

	if [[ -n "$stream" ]]; then
		#we need a file rather tha a "stream" of data to work with.
		fastaFile=$(file::make_temp_file)
		echo "$stream" | cat > $fastaFile
	fi
fi

#"$stream" data is not longer needed... Command: "unset $stream" was not working. Why?!!!!
stream=""

# If nothing comes from stream (STDIN above). It is no fastaFile has been set, then check for -i option.
if [[ -z "$fastaFile" ]]; then
	while getopts i: option; do
		case "${option}" in
			i)
				fastaFile="$OPTARG";;
			\?)
				feedback::sayfrom "Unknown option." "error"
				exit;;
		esac
	done
fi

#--------------------------------------------------------------------------
#						Validate Input
#--------------------------------------------------------------------------
if  [[ -z "$fastaFile" ]]; then
	feedback::sayfrom "No fasta file provided" "error"
	echo "
	Usage:
	bb_get_fasta_headers -i [fasta file]
	"
	exit 1
fi

isFasta=$(file::is_fasta $fastaFile) 
if [[ $isFasta == "0" ]];then

	grep "^>" "$fastaFile"  | sed -e "s/>//"

else
	feedback::sayfrom "Provided $fastaFile file, is not a valid Fasta file." "error"
	exit 1
fi

exit 0	